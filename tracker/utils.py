from django.utils import timezone
from django.core.mail import send_mail
from django.contrib.auth.models import User
from .models import RestSession
from datetime import timedelta
from django.contrib.auth.tokens import default_token_generator
from django.utils.http import urlsafe_base64_encode
from django.utils.encoding import force_bytes
from django.urls import reverse
from django.conf import settings

def send_reminders():
    three_days_ago = timezone.now() - timedelta(days=3)
    users = User.objects.all()

    for user in users:
        recent_sessions = RestSession.objects.filter(user=user, start_time__gte=three_days_ago)
        if not recent_sessions.exists() and user.email:
            send_mail(
                '–î–∑–µ–Ω –ø–æ–º–Ω–∏—Ç –æ –≤–∞—Å üíö',
                '–ú—ã –∑–∞–º–µ—Ç–∏–ª–∏, —á—Ç–æ –≤—ã –¥–∞–≤–Ω–æ –Ω–µ –æ—Ç–¥—ã—Ö–∞–ª–∏. –ú–æ–∂–µ—Ç –±—ã—Ç—å, –ø–æ—Ä–∞ —Å–¥–µ–ª–∞—Ç—å –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∏–ª–∏ –º–µ–¥–∏—Ç–∞—Ü–∏—é?',
                'zen-tracker@example.com',
                [user.email],
                fail_silently=False,
            )

def send_activation_email(user, request):
    token = default_token_generator.make_token(user)
    uid = urlsafe_base64_encode(force_bytes(user.pk))
    activation_link = request.build_absolute_uri(
        reverse('activate_account', kwargs={'uidb64': uid, 'token': token})
    )
    subject = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
    message = f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å—Å—ã–ª–∫–µ: {activation_link}'
    send_mail(subject, message, settings.DEFAULT_FROM_EMAIL, [user.email])

